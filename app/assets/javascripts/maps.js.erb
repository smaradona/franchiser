function initialize() {

  var polyId = document.getElementById("poly");
  var franchId = document.getElementById("franchella");
  var help = document.getElementById("help-title");
  var listener1;
  var listener2;
  var area = [];
  var areaLat = [];
  var areaLng = [];
  var pinImage = new google.maps.MarkerImage("http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|ce0e18",
      new google.maps.Size(21, 34),
      new google.maps.Point(0,0),
      new google.maps.Point(10, 34));
  var firstPin = new google.maps.MarkerImage("http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|1a3dbc",
      new google.maps.Size(21, 34),
      new google.maps.Point(0,0),
      new google.maps.Point(10, 34));
  var greyIcon = {
    url: "<%= asset_path 'logo-grey.png' %>",
    size: new google.maps.Size(100, 100),
    origin: new google.maps.Point(0, 0),
    anchor: new google.maps.Point(17, 34),
    scaledSize: new google.maps.Size(40, 40)
  };

  var colorIcon = {
    url: "<%= asset_path 'logo-color.png' %>",
    size: new google.maps.Size(100, 100),
    origin: new google.maps.Point(0, 0),
    anchor: new google.maps.Point(17, 34),
    scaledSize: new google.maps.Size(40, 40)
  };
  var markers = [];
  var markers2 = [];
  var path = new google.maps.MVCArray;
  if (typeof latitudes !== 'undefined' && latitudes.length > 0) {
    setTimeout(function () {
      var map = new google.maps.Map(document.getElementById('map-canvas'), {
        zoom: 6,
        center: new google.maps.LatLng(-30.5504369, -62.5015085),
        mapTypeId: google.maps.MapTypeId.ROADMAP
      });
      for (var i = 0; i < latitudes.length; i++) {
        localization = new google.maps.LatLng(latitudes[i], longitudes[i]);
        var marker = new google.maps.Marker({
          position: localization,
          map: map,
          icon: colorIcon,
        });
        markers.push(marker);
        var circle = new google.maps.Circle({
          map: map,
          radius: 2000,
          fillColor: '#AA0000'
        });
        circle.bindTo('center', marker, 'position');
      }
    }, 1500);
  }
  if (typeof franchLat !== 'undefined') {
      var map = new google.maps.Map(document.getElementById('map-canvas'), {
        zoom: 18,
        center: new google.maps.LatLng(franchLat, franchLng),
        mapTypeId: google.maps.MapTypeId.ROADMAP
      });
      localization = new google.maps.LatLng(franchLat, franchLng);
      var marker = new google.maps.Marker({
        position: localization,
        map: map,
        draggable: true,
        icon: colorIcon,
      });
      markers.push(marker);
      google.maps.event.addListener(marker, 'dragend', function(evt){
          latitude = evt.latLng.lat();
          longitude = evt.latLng.lng();
          $('#latitude').val(latitude);
          $('#longitude').val(longitude);
      });
    var coords = [];
    var bermudaTriangle = [];
    areaTotal = areaTotal.replace(/[\[\]']+/g,'');
    areaTotal = areaTotal.split(',');
    for (var i = 0; i < areaTotal.length; i++) {
      if(i%2 == 0 || i == 0){
        areaLat.push(areaTotal[i]);
      } else {
        areaLng.push(areaTotal[i]);
      }
    }
    for (var i = 0; i < areaLat.length; i++) {
      areaLat[i] = parseFloat(areaLat[i]);
      areaLng[i] = parseFloat(areaLng[i]);
      coords.push(new google.maps.LatLng(areaLat[i], areaLng[i]));
    }

    // Construct the polygon.
    bermudaTriangle = new google.maps.Polygon({
      paths: coords,
      strokeColor: '#FF0000',
      strokeOpacity: 0.8,
      strokeWeight: 3,
      fillColor: '#FF0000',
      fillOpacity: 0.35
    });

    bermudaTriangle.setMap(map);
  } else {
    var map = new google.maps.Map(document.getElementById('map-canvas'), {
      zoom: 6,
      center: new google.maps.LatLng(-30.5504369, -62.5015085),
      mapTypeId: google.maps.MapTypeId.ROADMAP
    });  
  }


  function clearMarkers() {
    for (var i = 0, marker; marker = markers[i]; i++) {
      marker.setMap(null);
    }
    markers = [];
  }

  function addFranchise(location) {
    clearMarkers();
    var marker = new google.maps.Marker({
      position: location,
      map: map,
      icon: colorIcon,
      draggable: true,
      animation: google.maps.Animation.DROP
    });
    markers.push(marker);
    latitude = markers[0].getPosition().lat();
    longitude = markers[0].getPosition().lng();
    $('#latitude').val(latitude);
    $('#longitude').val(longitude);
  }

  polyId.addEventListener("click", function() {
    google.maps.event.removeListener(listener2);
    listener1 = google.maps.event.addListener(map, 'click', addPoint);

    function addPoint(event) {
    // Markers color change
    if (markers2.length > 0) {
      for (i = 0; i < markers2.length; i++) {
          markers2[i].setIcon(pinImage);
      }
    }
      path.insertAt(path.length, event.latLng);

      var marker = new google.maps.Marker({
        position: event.latLng,
        map: map,
        draggable: true,
        icon: firstPin
      });
      markers2.push(marker);
      area.push([marker.getPosition().lat(), marker.getPosition().lng()]);
      marker.setTitle("#" + path.length);

      google.maps.event.addListener(marker, 'click', function() {
        marker.setMap(null);
        for (var i = 0, I = markers2.length; i < I && markers2[i] != marker; ++i);
        markers2.splice(i, 1);
        path.removeAt(i);
        }
      );

      google.maps.event.addListener(marker, 'dragend', function() {
        for (var i = 0, I = markers2.length; i < I && markers2[i] != marker; ++i);
        path.setAt(i, marker.getPosition());
        }
      );
      $('#area').val(area);
    }

    poly = new google.maps.Polygon({
      strokeWeight: 3,
      fillColor: '#5555FF'
    });
    poly.setMap(map);
    poly.setPaths(new google.maps.MVCArray([path]));

  });

  help.addEventListener("click", function() {
     var e = document.getElementById('help-content');
     if(e.style.display == 'block')
        e.style.display = 'none';
     else
        e.style.display = 'block';
  });
  // Create the search box and link it to the UI element.
  var input = /** @type {HTMLInputElement} */(
      document.getElementById('pac-input'));
  map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

  var searchBox = new google.maps.places.SearchBox(
    /** @type {HTMLInputElement} */(input));

  franchId.addEventListener("click", function() {
    google.maps.event.removeListener(listener1);
  // This event listener will call addMarker() when the map is clicked.
    listener2 = google.maps.event.addListener(map, 'click', function(event) {
    addFranchise(event.latLng);
  });

  });
  // Listen for the event fired when the user selects an item from the
  // pick list. Retrieve the matching places for that item.
  google.maps.event.addListener(searchBox, 'places_changed', function() {
    var places = searchBox.getPlaces();

    if (places.length == 0) {
      return;
    }
    clearMarkers();

    // For each place, get the icon, place name, and location.
    markers = [];
    var franchise;
    var bounds = new google.maps.LatLngBounds();
    for (var i = 0, place; place = places[i]; i++) {

      // Create a marker for each place.
      var marker = new google.maps.Marker({
        map: map,
        icon: greyIcon,
        position: place.geometry.location,
        draggable: true
      });
			markers.push(marker);

			google.maps.event.addListener(marker, 'click', function() {
				locations = this.position;
				clearMarkers();

			  var marker = new google.maps.Marker({
			    position: locations,
			    map: map,
			    icon: colorIcon,
			    draggable: true,
			    animation: google.maps.Animation.DROP
			  });
			  markers.push(marker);
        latitude = markers[0].getPosition().lat();
        longitude = markers[0].getPosition().lng();
        $('#latitude').val(latitude);
        $('#longitude').val(longitude);
    	});

      //var lat = marker.getPosition().lat();
			//var lng = marker.getPosition().lng();

      bounds.extend(place.geometry.location);
    }

    map.fitBounds(bounds);
  });

  // Bias the SearchBox results towards places that are within the bounds of the
  // current map's viewport.
  google.maps.event.addListener(map, 'bounds_changed', function() {
    var bounds = map.getBounds();
    searchBox.setBounds(bounds);
  });
}
google.maps.event.addDomListener(window, 'load', initialize);