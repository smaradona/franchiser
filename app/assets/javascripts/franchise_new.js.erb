function initialize() {
  var polyId = document.getElementById("polygon-button");
      franchId = document.getElementById("franchise-button");
      help = document.getElementById("help-title");
  var listener1;
  var area = [];
  var listener2;
      markers = [];
      markers2 = [];
      path = new google.maps.MVCArray;
  var greyIcon = {
    url: "<%= asset_path 'logo-grey.png' %>",
    size: new google.maps.Size(100, 100),
    origin: new google.maps.Point(0, 0),
    anchor: new google.maps.Point(17, 34),
    scaledSize: new google.maps.Size(40, 40)
  };
  var colorIcon = {
    url: "<%= asset_path 'logo-color.png' %>",
    size: new google.maps.Size(100, 100),
    origin: new google.maps.Point(0, 0),
    anchor: new google.maps.Point(17, 34),
    scaledSize: new google.maps.Size(40, 40)
  };
  var map = new google.maps.Map(document.getElementById('map-canvas'), {
    zoom: 6,
    center: new google.maps.LatLng(-30.5504369, -62.5015085),
    mapTypeId: google.maps.MapTypeId.ROADMAP
  });
  var firstPin = new google.maps.MarkerImage("http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|1a3dbc",
    new google.maps.Size(21, 34),
    new google.maps.Point(0,0),
    new google.maps.Point(10, 34));
  var pinImage = new google.maps.MarkerImage("http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|ce0e18",
    new google.maps.Size(21, 34),
    new google.maps.Point(0,0),
    new google.maps.Point(10, 34));

  // Delete all markers.
  function clearMarkers() {
    for (var i = 0, marker; marker = markers[i]; i++) {
      marker.setMap(null);
    }
    markers = [];
  }

  // Add franchise icon to map.
  function addFranchise(location) {
    // Delete markers (in case there's been a franchise set previously).
    clearMarkers();

    // Create marker.
    var marker = new google.maps.Marker({
      position: location,
      map: map,
      icon: colorIcon,
      draggable: true,
      animation: google.maps.Animation.DROP
    });
    markers.push(marker);

    // Get lat and lng of the franchise.
    latitude = markers[0].getPosition().lat();
    longitude = markers[0].getPosition().lng();

    // Set lat and lng value to the form input.
    $('#latitude').val(latitude);
    $('#longitude').val(longitude);

    // Add listener to update the form input value in case
    // the franchise lat and/or lng is/are dragged, changing its position.
    google.maps.event.addListener(marker, 'dragend', function(evt){
        latitude = evt.latLng.lat();
        longitude = evt.latLng.lng();
        $('#latitude').val(latitude);
        $('#longitude').val(longitude);
    });
  }

  // Add listener to create the polygon draw button.
  polyId.addEventListener("click", function() {
    franchId.removeAttribute("class");
    polyId.className = 'selected';
    google.maps.event.removeListener(listener2);
    if (typeof listener1 == "undefined" || listener1.gb == null) {
      listener1 = google.maps.event.addListener(map, 'click', addPoint);  
    }
    // Adds a point to the polygon.
    function addPoint(event) {
      // Markers color change
      if (markers2.length > 0) {
        for (i = 0; i < markers2.length; i++) {
          markers2[i].setIcon(pinImage);
        }
      }
      path.insertAt(path.length, event.latLng);
      var marker = new google.maps.Marker({
        position: event.latLng,
        map: map,
        draggable: true,
        icon: firstPin
      });
      markers2.push(marker);
      area.push([marker.getPosition().lat(), marker.getPosition().lng()]);
      marker.setTitle("#" + path.length);

      // Adds a listener to the point of the polygon so it can be removed with a click.
      google.maps.event.addListener(marker, 'click', function() {
        marker.setMap(null);
        for (var i = 0, I = markers2.length; i < I && markers2[i] != marker; ++i);
          markers2.splice(i, 1);
          path.removeAt(i);
      });
      // Adds a listener to the point of the polygon so it can be dragged,
      // updating the form input value.
      google.maps.event.addListener(marker, 'dragend', function() {
        for (var i = 0, I = markers2.length; i < I && markers2[i] != marker; ++i);
          area[i] = marker.getPosition().lat() + "," + marker.getPosition().lng();
          path.setAt(i, marker.getPosition());
          $('#area').val(area);
      });
      $('#area').val(area);
      // Draw polygon.
      poly = new google.maps.Polygon({
        strokeWeight: 3,
        fillColor: '#5555FF'
      });
      poly.setMap(map);
      poly.setPaths(new google.maps.MVCArray([path]));
    }
  });
  
  // Add listener to toogle help info.
  help.addEventListener("click", function() {
     var e = document.getElementById('help-content');
     if(e.style.display == 'block')
        e.style.display = 'none';
     else
        e.style.display = 'block';
  });

  // Create the search box and link it to the UI element.
  var input = /** @type {HTMLInputElement} */(
      document.getElementById('pac-input'));
  map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

  var searchBox = new google.maps.places.SearchBox(
    /** @type {HTMLInputElement} */(input));

  // Add listener to create the franchise setter button.
  franchId.addEventListener("click", function() {
    polyId.removeAttribute("class");
    franchId.className = 'selected';
    google.maps.event.removeListener(listener1);

    if (typeof listener2 == "undefined" || listener2.gb == null) {
      // This event listener will call addMarker() when the map is clicked.
      listener2 = google.maps.event.addListener(map, 'click', function(event) {
        addFranchise(event.latLng);
      });
    }
  });

  // Listen for the event fired when the user selects an item from the
  // pick list. Retrieve the matching places for that item.
  google.maps.event.addListener(searchBox, 'places_changed', function() {
    var places = searchBox.getPlaces();

    if (places.length == 0) {
      return;
    }
    clearMarkers();

    // For each place, get the icon, place name, and location.
    markers = [];
    var franchise;
    var bounds = new google.maps.LatLngBounds();
    for (var i = 0, place; place = places[i]; i++) {

      // Place marker for franchise.
      var marker = new google.maps.Marker({
        map: map,
        icon: greyIcon,
        position: place.geometry.location,
        draggable: true
      });
      markers.push(marker);

      google.maps.event.addListener(marker, 'click', function() {
        locations = this.position;
        clearMarkers();

        var marker = new google.maps.Marker({
          position: locations,
          map: map,
          icon: colorIcon,
          draggable: true,
          animation: google.maps.Animation.DROP
        });
        markers.push(marker);
        latitude = markers[0].getPosition().lat();
        longitude = markers[0].getPosition().lng();
        $('#latitude').val(latitude);
        $('#longitude').val(longitude);
        google.maps.event.addListener(marker, 'dragend', function(evt){
          latitude = evt.latLng.lat();
          longitude = evt.latLng.lng();
          $('#latitude').val(latitude);
          $('#longitude').val(longitude);
        });
      });

      bounds.extend(place.geometry.location);
    }

    map.fitBounds(bounds);
  });

  // Bias the SearchBox results towards places that are within the bounds of the
  // current map's viewport.
  google.maps.event.addListener(map, 'bounds_changed', function() {
    var bounds = map.getBounds();
    searchBox.setBounds(bounds);
  });
}
google.maps.event.addDomListener(window, 'load', initialize);