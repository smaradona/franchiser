function initialize() {
  var areaLat = [];
    polyId = document.getElementById("polygon-button");
    franchId = document.getElementById("franchise-button");
    areaLng = [];
    coords = [];
  var listener2;
    area = [];
    path = new google.maps.MVCArray;
    markers = [];
    markers2 = [];
    areaPoly = [];
    colorIcon = {
      url: "<%= asset_path 'logo-color.png' %>",
      size: new google.maps.Size(100, 100),
      origin: new google.maps.Point(0, 0),
      anchor: new google.maps.Point(17, 34),
      scaledSize: new google.maps.Size(40, 40)
    };
  var firstPin = new google.maps.MarkerImage("http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|1a3dbc",
    new google.maps.Size(21, 34),
    new google.maps.Point(0,0),
    new google.maps.Point(10, 34));
  var pinImage = new google.maps.MarkerImage("http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|ce0e18",
    new google.maps.Size(21, 34),
    new google.maps.Point(0,0),
    new google.maps.Point(10, 34));
  var map = new google.maps.Map(document.getElementById('map-canvas'), {
    zoom: 18,
    center: new google.maps.LatLng(franchLat, franchLng),
    mapTypeId: google.maps.MapTypeId.ROADMAP
  });
  localization = new google.maps.LatLng(franchLat, franchLng);
  var marker = new google.maps.Marker({
    position: localization,
    map: map,
    draggable: true,
    icon: colorIcon,
  });
  markers.push(marker);
  google.maps.event.addListener(marker, 'dragend', function(evt){
      latitude = evt.latLng.lat();
      longitude = evt.latLng.lng();
      $('#latitude').val(latitude);
      $('#longitude').val(longitude);
  });

  if (areaTotal != "") {
    // Converting string area to coordinates array in order to construct the polygon.
    areaTotal = areaTotal.replace(/[\[\]']+/g,'');
    areaTotal = areaTotal.split(',');
    for (var i = 0; i < areaTotal.length; i++) {
      if(i%2 == 0 || i == 0){
        areaLat.push(areaTotal[i]);
      } else {
        areaLng.push(areaTotal[i]);
      }
    }
    for (var i = 0; i < areaLat.length; i++) {
      areaLat[i] = parseFloat(areaLat[i]);
      areaLng[i] = parseFloat(areaLng[i]);
      coords.push(new google.maps.LatLng(areaLat[i], areaLng[i]));
    }

    for (var i = 0; i < coords.length; i++) {
      addPoint(coords[i]);
    }
  }

  // Adds a point to the polygon.
  function addPoint(coord) {
    // Markers color change
    if (markers2.length > 0) {
      for (i = 0; i < markers2.length; i++) {
        markers2[i].setIcon(pinImage);
      }
    }
    path.insertAt(path.length, coord);
    var marker = new google.maps.Marker({
      position: coord,
      map: map,
      draggable: true,
      icon: firstPin
    });
    markers2.push(marker);
    area.push([marker.getPosition().lat(), marker.getPosition().lng()]);
    marker.setTitle("#" + path.length);

    // Adds a listener to the point of the polygon so it can be removed with a click.
    google.maps.event.addListener(marker, 'click', function() {
      marker.setMap(null);
      for (var i = 0, I = markers2.length; i < I && markers2[i] != marker; ++i);
        markers2.splice(i, 1);
        path.removeAt(i);
    });
    // Adds a listener to the point of the polygon so it can be dragged,
    // updating the form input value.
    google.maps.event.addListener(marker, 'dragend', function() {
      for (var i = 0, I = markers2.length; i < I && markers2[i] != marker; ++i);
        area[i] = marker.getPosition().lat() + "," + marker.getPosition().lng();
        path.setAt(i, marker.getPosition());
        $('#area').val(area);
    });
    $('#area').val(area);
  }
    // Draw polygon.
    poly = new google.maps.Polygon({
      strokeWeight: 3,
      fillColor: '#5555FF'
    });
    poly.setMap(map);
    poly.setPaths(new google.maps.MVCArray([path]));

  // Add listener to create the polygon draw button.
  polyId.addEventListener("click", function() {
    franchId.removeAttribute("class");
    polyId.className = 'selected';
    google.maps.event.removeListener(listener2);
    if (typeof listener1 == "undefined" || listener1.gb == null) {
      listener1 = google.maps.event.addListener(map, 'click', addPointer);  
    }
    // Adds a point to the polygon.
    function addPointer(event) {
      // Markers color change
      if (markers2.length > 0) {
        for (i = 0; i < markers2.length; i++) {
          markers2[i].setIcon(pinImage);
        }
      }
      path.insertAt(path.length, event.latLng);
      var marker = new google.maps.Marker({
        position: event.latLng,
        map: map,
        draggable: true,
        icon: firstPin
      });
      markers2.push(marker);
      area.push([marker.getPosition().lat(), marker.getPosition().lng()]);
      marker.setTitle("#" + path.length);

      // Adds a listener to the point of the polygon so it can be removed with a click.
      google.maps.event.addListener(marker, 'click', function() {
        marker.setMap(null);
        for (var i = 0, I = markers2.length; i < I && markers2[i] != marker; ++i);
          markers2.splice(i, 1);
          path.removeAt(i);
      });
      // Adds a listener to the point of the polygon so it can be dragged,
      // updating the form input value.
      google.maps.event.addListener(marker, 'dragend', function() {
        for (var i = 0, I = markers2.length; i < I && markers2[i] != marker; ++i);
          area[i] = marker.getPosition().lat() + "," + marker.getPosition().lng();
          path.setAt(i, marker.getPosition());
          $('#area').val(area);
      });
      $('#area').val(area);
      // Draw polygon.
      poly = new google.maps.Polygon({
        strokeWeight: 3,
        fillColor: '#5555FF'
      });
      poly.setMap(map);
      poly.setPaths(new google.maps.MVCArray([path]));
    }
  });
}
google.maps.event.addDomListener(window, 'load', initialize);